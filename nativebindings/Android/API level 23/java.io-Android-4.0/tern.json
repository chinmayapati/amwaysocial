{
  "java": {
    "io": {
      "PushbackInputStream": {
        "!url": "http://developer.android.com/reference/java/io/PushbackInputStream.html",
        "!type": "fn(in: +java.io.InputStream)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/PushbackInputStream.html#read()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "available": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/PushbackInputStream.html#available()"
          },
          "mark": {
            "!type": "fn(readlimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/PushbackInputStream.html#mark(int)"
          },
          "unread": {
            "!type": "fn(buffer: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/io/PushbackInputStream.html#unread(byte[])"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/PushbackInputStream.html#reset()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/PushbackInputStream.html#markSupported()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "skip": {
            "!type": "fn(byteCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/PushbackInputStream.html#skip(long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/PushbackInputStream.html#close()"
          }
        }
      },
      "FilterOutputStream": {
        "!url": "http://developer.android.com/reference/java/io/FilterOutputStream.html",
        "!type": "fn(out: +java.io.OutputStream)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "flush": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/FilterOutputStream.html#flush()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/FilterOutputStream.html#close()"
          },
          "write": {
            "!type": "fn(buffer: +java.newArray, offset: number, length: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/FilterOutputStream.html#write(byte[], int, int)"
          }
        }
      },
      "NotActiveException": {
        "!url": "http://developer.android.com/reference/java/io/NotActiveException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "BufferedOutputStream": {
        "!url": "http://developer.android.com/reference/java/io/BufferedOutputStream.html",
        "!type": "fn(out: +java.io.OutputStream)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "flush": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/BufferedOutputStream.html#flush()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/BufferedOutputStream.html#close()"
          },
          "write": {
            "!type": "fn(buffer: +java.newArray, offset: number, length: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/BufferedOutputStream.html#write(byte[], int, int)"
          }
        }
      },
      "BufferedReader": {
        "!url": "http://developer.android.com/reference/java/io/BufferedReader.html",
        "!type": "fn(in: +java.io.Reader)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/BufferedReader.html#read()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "mark": {
            "!type": "fn(markLimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/BufferedReader.html#mark(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/BufferedReader.html#reset()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/BufferedReader.html#markSupported()"
          },
          "readLine": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/BufferedReader.html#readLine()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "ready": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/BufferedReader.html#ready()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "skip": {
            "!type": "fn(charCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/BufferedReader.html#skip(long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/BufferedReader.html#close()"
          }
        }
      },
      "InputStreamReader": {
        "!url": "http://developer.android.com/reference/java/io/InputStreamReader.html",
        "!type": "fn(in: +java.io.InputStream)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/InputStreamReader.html#read()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "mark": {
            "!type": "fn(readLimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/Reader.html#mark(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/Reader.html#reset()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/Reader.html#markSupported()"
          },
          "getEncoding": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/InputStreamReader.html#getEncoding()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "ready": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/InputStreamReader.html#ready()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "skip": {
            "!type": "fn(charCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/Reader.html#skip(long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/InputStreamReader.html#close()"
          }
        }
      },
      "ObjectStreamField": {
        "!url": "http://developer.android.com/reference/java/io/ObjectStreamField.html",
        "!type": "fn(name: string, cl: +java.lang.Class)",
        "prototype": {
          "getName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/ObjectStreamField.html#getName()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/ObjectStreamField.html#toString()"
          },
          "compareTo": {
            "!type": "fn(o: +java.lang.Object) -> number",
            "!url": "http://developer.android.com/reference/java/io/ObjectStreamField.html#compareTo(java.lang.Object)"
          },
          "isPrimitive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/ObjectStreamField.html#isPrimitive()"
          },
          "getTypeCode": {
            "!type": "fn() -> +java.lang.Char",
            "!url": "http://developer.android.com/reference/java/io/ObjectStreamField.html#getTypeCode()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "isUnshared": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/ObjectStreamField.html#isUnshared()"
          },
          "getType": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/io/ObjectStreamField.html#getType()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getTypeString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/ObjectStreamField.html#getTypeString()"
          },
          "getOffset": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/ObjectStreamField.html#getOffset()"
          }
        }
      },
      "UnsupportedEncodingException": {
        "!url": "http://developer.android.com/reference/java/io/UnsupportedEncodingException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ObjectInputStream": {
        "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html",
        "!type": "fn(input: +java.io.InputStream)",
        "GetField": {
          "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.GetField.html",
          "!type": "fn()",
          "prototype": {
            "getObjectStreamClass": {
              "!type": "fn() -> +java.io.ObjectStreamClass",
              "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.GetField.html#getObjectStreamClass()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "get": {
              "!type": "fn(name: string, defaultValue: bool) -> bool",
              "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.GetField.html#get(java.lang.String, boolean)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "defaulted": {
              "!type": "fn(name: string) -> bool",
              "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.GetField.html#defaulted(java.lang.String)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "prototype": {
          "readChar": {
            "!type": "fn() -> +java.lang.Char",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#readChar()"
          },
          "readByte": {
            "!type": "fn() -> +java.lang.Byte",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#readByte()"
          },
          "skipBytes": {
            "!type": "fn(length: number) -> number",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#skipBytes(int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "readDouble": {
            "!type": "fn() -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#readDouble()"
          },
          "readUnsignedShort": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#readUnsignedShort()"
          },
          "readObject": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#readObject()"
          },
          "readShort": {
            "!type": "fn() -> +java.lang.Short",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#readShort()"
          },
          "registerValidation": {
            "!type": "fn(object: +java.io.ObjectInputValidation, priority: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#registerValidation(java.io.ObjectInputValidation, int)"
          },
          "readFully": {
            "!type": "fn(dst: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#readFully(byte[])"
          },
          "readUTF": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#readUTF()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#markSupported()"
          },
          "mark": {
            "!type": "fn(readlimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#mark(int)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#close()"
          },
          "readUnsignedByte": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#readUnsignedByte()"
          },
          "readInt": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#readInt()"
          },
          "available": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#available()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "readLine": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#readLine()"
          },
          "defaultReadObject": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#defaultReadObject()"
          },
          "skip": {
            "!type": "fn(byteCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#skip(long)"
          },
          "readUnshared": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#readUnshared()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#read()"
          },
          "readBoolean": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#readBoolean()"
          },
          "readFields": {
            "!type": "fn() -> +java.io.ObjectInputStream.GetField",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#readFields()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#reset()"
          },
          "readLong": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#readLong()"
          },
          "readFloat": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/java/io/ObjectInputStream.html#readFloat()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "FilePermission": {
        "!url": "http://developer.android.com/reference/java/io/FilePermission.html",
        "!type": "fn(path: string, actions: string)",
        "prototype": {
          "getActions": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/FilePermission.html#getActions()"
          },
          "getName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/security/Permission.html#getName()"
          },
          "implies": {
            "!type": "fn(permission: +java.security.Permission) -> bool",
            "!url": "http://developer.android.com/reference/java/io/FilePermission.html#implies(java.security.Permission)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "checkGuard": {
            "!type": "fn(obj: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/java/security/Permission.html#checkGuard(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "newPermissionCollection": {
            "!type": "fn() -> +java.security.PermissionCollection",
            "!url": "http://developer.android.com/reference/java/security/Permission.html#newPermissionCollection()"
          }
        }
      },
      "FileWriter": {
        "!url": "http://developer.android.com/reference/java/io/FileWriter.html",
        "!type": "fn(file: +java.io.File)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "append": {
            "!type": "fn(c: +java.lang.Char) -> +java.io.Writer",
            "!url": "http://developer.android.com/reference/java/io/Writer.html#append(char)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getEncoding": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/OutputStreamWriter.html#getEncoding()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "flush": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/OutputStreamWriter.html#flush()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/OutputStreamWriter.html#close()"
          },
          "write": {
            "!type": "fn(buffer: +java.newArray, offset: number, count: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/OutputStreamWriter.html#write(char[], int, int)"
          }
        }
      },
      "DataInputStream": {
        "!url": "http://developer.android.com/reference/java/io/DataInputStream.html",
        "!type": "fn(in: +java.io.InputStream)",
        "readUTF": {
          "!type": "fn(in: +java.io.DataInput) -> string",
          "!url": "http://developer.android.com/reference/java/io/DataInputStream.html#readUTF(java.io.DataInput)"
        },
        "prototype": {
          "readChar": {
            "!type": "fn() -> +java.lang.Char",
            "!url": "http://developer.android.com/reference/java/io/DataInputStream.html#readChar()"
          },
          "readByte": {
            "!type": "fn() -> +java.lang.Byte",
            "!url": "http://developer.android.com/reference/java/io/DataInputStream.html#readByte()"
          },
          "skipBytes": {
            "!type": "fn(count: number) -> number",
            "!url": "http://developer.android.com/reference/java/io/DataInputStream.html#skipBytes(int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "readDouble": {
            "!type": "fn() -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/java/io/DataInputStream.html#readDouble()"
          },
          "readUnsignedShort": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/DataInputStream.html#readUnsignedShort()"
          },
          "readShort": {
            "!type": "fn() -> +java.lang.Short",
            "!url": "http://developer.android.com/reference/java/io/DataInputStream.html#readShort()"
          },
          "readFully": {
            "!type": "fn(dst: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/io/DataInputStream.html#readFully(byte[])"
          },
          "readUTF": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/DataInputStream.html#readUTF()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/FilterInputStream.html#markSupported()"
          },
          "mark": {
            "!type": "fn(readlimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/FilterInputStream.html#mark(int)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/FilterInputStream.html#close()"
          },
          "readUnsignedByte": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/DataInputStream.html#readUnsignedByte()"
          },
          "readInt": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/DataInputStream.html#readInt()"
          },
          "available": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/FilterInputStream.html#available()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "readLine": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/DataInputStream.html#readLine()"
          },
          "skip": {
            "!type": "fn(byteCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/FilterInputStream.html#skip(long)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "read": {
            "!type": "fn(buffer: +java.newArray) -> number",
            "!url": "http://developer.android.com/reference/java/io/DataInputStream.html#read(byte[])"
          },
          "readBoolean": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/DataInputStream.html#readBoolean()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/FilterInputStream.html#reset()"
          },
          "readLong": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/DataInputStream.html#readLong()"
          },
          "readFloat": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/java/io/DataInputStream.html#readFloat()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "ObjectStreamClass": {
        "!url": "http://developer.android.com/reference/java/io/ObjectStreamClass.html",
        "NO_FIELDS": {
          "!type": "+java.newArray",
          "!url": "http://developer.android.com/reference/java/io/ObjectStreamClass.html#NO_FIELDS"
        },
        "lookupAny": {
          "!type": "fn(cl: +java.lang.Class) -> +java.io.ObjectStreamClass",
          "!url": "http://developer.android.com/reference/java/io/ObjectStreamClass.html#lookupAny(java.lang.Class)"
        },
        "lookup": {
          "!type": "fn(cl: +java.lang.Class) -> +java.io.ObjectStreamClass",
          "!url": "http://developer.android.com/reference/java/io/ObjectStreamClass.html#lookup(java.lang.Class)"
        },
        "prototype": {
          "forClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/io/ObjectStreamClass.html#forClass()"
          },
          "getFields": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/io/ObjectStreamClass.html#getFields()"
          },
          "getName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/ObjectStreamClass.html#getName()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "checkAndGetTcObjectClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/io/ObjectStreamClass.html#checkAndGetTcObjectClass()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/ObjectStreamClass.html#toString()"
          },
          "getSerialVersionUID": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/ObjectStreamClass.html#getSerialVersionUID()"
          },
          "getField": {
            "!type": "fn(name: string) -> +java.io.ObjectStreamField",
            "!url": "http://developer.android.com/reference/java/io/ObjectStreamClass.html#getField(java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "checkAndGetTcEnumClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/io/ObjectStreamClass.html#checkAndGetTcEnumClass()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "PushbackReader": {
        "!url": "http://developer.android.com/reference/java/io/PushbackReader.html",
        "!type": "fn(in: +java.io.Reader)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/PushbackReader.html#read()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "mark": {
            "!type": "fn(readAheadLimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/PushbackReader.html#mark(int)"
          },
          "unread": {
            "!type": "fn(buffer: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/io/PushbackReader.html#unread(char[])"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/PushbackReader.html#reset()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/PushbackReader.html#markSupported()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "ready": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/PushbackReader.html#ready()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "skip": {
            "!type": "fn(charCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/PushbackReader.html#skip(long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/PushbackReader.html#close()"
          }
        }
      },
      "Writer": {
        "!url": "http://developer.android.com/reference/java/io/Writer.html",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "append": {
            "!type": "fn(c: +java.lang.Char) -> +java.io.Writer",
            "!url": "http://developer.android.com/reference/java/io/Writer.html#append(char)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "flush": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/Writer.html#flush()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/Writer.html#close()"
          },
          "write": {
            "!type": "fn(buf: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/io/Writer.html#write(char[])"
          }
        }
      },
      "FilterInputStream": {
        "!url": "http://developer.android.com/reference/java/io/FilterInputStream.html",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/FilterInputStream.html#read()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "available": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/FilterInputStream.html#available()"
          },
          "mark": {
            "!type": "fn(readlimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/FilterInputStream.html#mark(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/FilterInputStream.html#reset()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/FilterInputStream.html#markSupported()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "skip": {
            "!type": "fn(byteCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/FilterInputStream.html#skip(long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/FilterInputStream.html#close()"
          }
        }
      },
      "IOError": {
        "!url": "http://developer.android.com/reference/java/io/IOError.html",
        "!type": "fn(cause: +java.lang.Throwable)",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "InvalidClassException": {
        "!url": "http://developer.android.com/reference/java/io/InvalidClassException.html",
        "!type": "fn(detailMessage: string)",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/InvalidClassException.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "File": {
        "!url": "http://developer.android.com/reference/java/io/File.html",
        "!type": "fn(dir: +java.io.File, name: string)",
        "separatorChar": {
          "!type": "+java.lang.Char",
          "!url": "http://developer.android.com/reference/java/io/File.html#separatorChar"
        },
        "pathSeparatorChar": {
          "!type": "+java.lang.Char",
          "!url": "http://developer.android.com/reference/java/io/File.html#pathSeparatorChar"
        },
        "pathSeparator": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/java/io/File.html#pathSeparator"
        },
        "separator": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/java/io/File.html#separator"
        },
        "createTempFile": {
          "!type": "fn(prefix: string, suffix: string) -> +java.io.File",
          "!url": "http://developer.android.com/reference/java/io/File.html#createTempFile(java.lang.String, java.lang.String)"
        },
        "listRoots": {
          "!type": "fn() -> +java.newArray",
          "!url": "http://developer.android.com/reference/java/io/File.html#listRoots()"
        },
        "prototype": {
          "exists": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/File.html#exists()"
          },
          "mkdir": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/File.html#mkdir()"
          },
          "setExecutable": {
            "!type": "fn(executable: bool, ownerOnly: bool) -> bool",
            "!url": "http://developer.android.com/reference/java/io/File.html#setExecutable(boolean, boolean)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/File.html#toString()"
          },
          "canExecute": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/File.html#canExecute()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setReadable": {
            "!type": "fn(readable: bool, ownerOnly: bool) -> bool",
            "!url": "http://developer.android.com/reference/java/io/File.html#setReadable(boolean, boolean)"
          },
          "setReadOnly": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/File.html#setReadOnly()"
          },
          "getCanonicalPath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/File.html#getCanonicalPath()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "getAbsoluteFile": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/java/io/File.html#getAbsoluteFile()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/File.html#hashCode()"
          },
          "isHidden": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/File.html#isHidden()"
          },
          "getPath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/File.html#getPath()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "setWritable": {
            "!type": "fn(writable: bool, ownerOnly: bool) -> bool",
            "!url": "http://developer.android.com/reference/java/io/File.html#setWritable(boolean, boolean)"
          },
          "deleteOnExit": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/File.html#deleteOnExit()"
          },
          "length": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/File.html#length()"
          },
          "createNewFile": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/File.html#createNewFile()"
          },
          "toURL": {
            "!type": "fn() -> +java.net.URL",
            "!url": "http://developer.android.com/reference/java/io/File.html#toURL()"
          },
          "list": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/io/File.html#list()"
          },
          "toURI": {
            "!type": "fn() -> +java.net.URI",
            "!url": "http://developer.android.com/reference/java/io/File.html#toURI()"
          },
          "mkdirs": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/File.html#mkdirs()"
          },
          "getFreeSpace": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/File.html#getFreeSpace()"
          },
          "canRead": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/File.html#canRead()"
          },
          "getUsableSpace": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/File.html#getUsableSpace()"
          },
          "isDirectory": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/File.html#isDirectory()"
          },
          "equals": {
            "!type": "fn(obj: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/io/File.html#equals(java.lang.Object)"
          },
          "getAbsolutePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/File.html#getAbsolutePath()"
          },
          "canWrite": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/File.html#canWrite()"
          },
          "listFiles": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/io/File.html#listFiles()"
          },
          "getParentFile": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/java/io/File.html#getParentFile()"
          },
          "delete": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/File.html#delete()"
          },
          "lastModified": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/File.html#lastModified()"
          },
          "getTotalSpace": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/File.html#getTotalSpace()"
          },
          "getCanonicalFile": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/java/io/File.html#getCanonicalFile()"
          },
          "getName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/File.html#getName()"
          },
          "getParent": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/File.html#getParent()"
          },
          "setLastModified": {
            "!type": "fn(time: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/java/io/File.html#setLastModified(long)"
          },
          "renameTo": {
            "!type": "fn(newPath: +java.io.File) -> bool",
            "!url": "http://developer.android.com/reference/java/io/File.html#renameTo(java.io.File)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "compareTo": {
            "!type": "fn(another: +java.io.File) -> number",
            "!url": "http://developer.android.com/reference/java/io/File.html#compareTo(java.io.File)"
          },
          "isAbsolute": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/File.html#isAbsolute()"
          },
          "isFile": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/File.html#isFile()"
          }
        }
      },
      "InputStream": {
        "!url": "http://developer.android.com/reference/java/io/InputStream.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#read()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "available": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#available()"
          },
          "mark": {
            "!type": "fn(readlimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#mark(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#reset()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#markSupported()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "skip": {
            "!type": "fn(byteCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#skip(long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#close()"
          }
        }
      },
      "StreamTokenizer": {
        "!url": "http://developer.android.com/reference/java/io/StreamTokenizer.html",
        "!type": "fn(is: +java.io.InputStream)",
        "TT_WORD": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/io/StreamTokenizer.html#TT_WORD"
        },
        "TT_EOF": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/io/StreamTokenizer.html#TT_EOF"
        },
        "TT_NUMBER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/io/StreamTokenizer.html#TT_NUMBER"
        },
        "TT_EOL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/io/StreamTokenizer.html#TT_EOL"
        },
        "prototype": {
          "commentChar": {
            "!type": "fn(ch: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/StreamTokenizer.html#commentChar(int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "pushBack": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/StreamTokenizer.html#pushBack()"
          },
          "resetSyntax": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/StreamTokenizer.html#resetSyntax()"
          },
          "eolIsSignificant": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/java/io/StreamTokenizer.html#eolIsSignificant(boolean)"
          },
          "ordinaryChars": {
            "!type": "fn(low: number, hi: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/StreamTokenizer.html#ordinaryChars(int, int)"
          },
          "parseNumbers": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/StreamTokenizer.html#parseNumbers()"
          },
          "ordinaryChar": {
            "!type": "fn(ch: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/StreamTokenizer.html#ordinaryChar(int)"
          },
          "whitespaceChars": {
            "!type": "fn(low: number, hi: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/StreamTokenizer.html#whitespaceChars(int, int)"
          },
          "quoteChar": {
            "!type": "fn(ch: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/StreamTokenizer.html#quoteChar(int)"
          },
          "slashStarComments": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/java/io/StreamTokenizer.html#slashStarComments(boolean)"
          },
          "lineno": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/StreamTokenizer.html#lineno()"
          },
          "slashSlashComments": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/java/io/StreamTokenizer.html#slashSlashComments(boolean)"
          },
          "nextToken": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/StreamTokenizer.html#nextToken()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/StreamTokenizer.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "wordChars": {
            "!type": "fn(low: number, hi: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/StreamTokenizer.html#wordChars(int, int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "lowerCaseMode": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/java/io/StreamTokenizer.html#lowerCaseMode(boolean)"
          }
        }
      },
      "ObjectOutputStream": {
        "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html",
        "!type": "fn(output: +java.io.OutputStream)",
        "PutField": {
          "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.PutField.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "put": {
              "!type": "fn(name: string, value: bool) -> void",
              "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.PutField.html#put(java.lang.String, boolean)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "write": {
              "!type": "fn(out: +java.io.ObjectOutput) -> void",
              "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.PutField.html#write(java.io.ObjectOutput)"
            }
          }
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "writeUTF": {
            "!type": "fn(value: string) -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeUTF(java.lang.String)"
          },
          "writeBytes": {
            "!type": "fn(value: string) -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeBytes(java.lang.String)"
          },
          "writeChars": {
            "!type": "fn(value: string) -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeChars(java.lang.String)"
          },
          "writeUnshared": {
            "!type": "fn(object: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeUnshared(java.lang.Object)"
          },
          "writeInt": {
            "!type": "fn(value: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeInt(int)"
          },
          "writeFields": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeFields()"
          },
          "useProtocolVersion": {
            "!type": "fn(version: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html#useProtocolVersion(int)"
          },
          "writeLong": {
            "!type": "fn(value: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeLong(long)"
          },
          "defaultWriteObject": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html#defaultWriteObject()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "writeFloat": {
            "!type": "fn(value: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeFloat(float)"
          },
          "writeChar": {
            "!type": "fn(value: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeChar(int)"
          },
          "writeByte": {
            "!type": "fn(value: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeByte(int)"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html#close()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "flush": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html#flush()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "writeDouble": {
            "!type": "fn(value: +java.lang.Double) -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeDouble(double)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "writeObject": {
            "!type": "fn(object: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeObject(java.lang.Object)"
          },
          "writeShort": {
            "!type": "fn(value: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeShort(int)"
          },
          "write": {
            "!type": "fn(buffer: +java.newArray, offset: number, length: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html#write(byte[], int, int)"
          },
          "writeBoolean": {
            "!type": "fn(value: bool) -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeBoolean(boolean)"
          },
          "putFields": {
            "!type": "fn() -> +java.io.ObjectOutputStream.PutField",
            "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html#putFields()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/ObjectOutputStream.html#reset()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "OutputStream": {
        "!url": "http://developer.android.com/reference/java/io/OutputStream.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "flush": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/OutputStream.html#flush()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/OutputStream.html#close()"
          },
          "write": {
            "!type": "fn(buffer: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/io/OutputStream.html#write(byte[])"
          }
        }
      },
      "FileOutputStream": {
        "!url": "http://developer.android.com/reference/java/io/FileOutputStream.html",
        "!type": "fn(file: +java.io.File)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getChannel": {
            "!type": "fn() -> +java.nio.channels.FileChannel",
            "!url": "http://developer.android.com/reference/java/io/FileOutputStream.html#getChannel()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getFD": {
            "!type": "fn() -> +java.io.FileDescriptor",
            "!url": "http://developer.android.com/reference/java/io/FileOutputStream.html#getFD()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "flush": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/OutputStream.html#flush()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/FileOutputStream.html#close()"
          },
          "write": {
            "!type": "fn(buffer: +java.newArray, byteOffset: number, byteCount: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/FileOutputStream.html#write(byte[], int, int)"
          }
        }
      },
      "CharConversionException": {
        "!url": "http://developer.android.com/reference/java/io/CharConversionException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "PipedReader": {
        "!url": "http://developer.android.com/reference/java/io/PipedReader.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/PipedReader.html#read()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "mark": {
            "!type": "fn(readLimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/Reader.html#mark(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/Reader.html#reset()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/Reader.html#markSupported()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "ready": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/PipedReader.html#ready()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "skip": {
            "!type": "fn(charCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/Reader.html#skip(long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/PipedReader.html#close()"
          },
          "connect": {
            "!type": "fn(src: +java.io.PipedWriter) -> void",
            "!url": "http://developer.android.com/reference/java/io/PipedReader.html#connect(java.io.PipedWriter)"
          }
        }
      },
      "FilterReader": {
        "!url": "http://developer.android.com/reference/java/io/FilterReader.html",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/FilterReader.html#read()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "mark": {
            "!type": "fn(readlimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/FilterReader.html#mark(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/FilterReader.html#reset()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/FilterReader.html#markSupported()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "ready": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/FilterReader.html#ready()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "skip": {
            "!type": "fn(charCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/FilterReader.html#skip(long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/FilterReader.html#close()"
          }
        }
      },
      "NotSerializableException": {
        "!url": "http://developer.android.com/reference/java/io/NotSerializableException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Console": {
        "!url": "http://developer.android.com/reference/java/io/Console.html",
        "getConsole": {
          "!type": "fn() -> +java.io.Console",
          "!url": "http://developer.android.com/reference/java/io/Console.html#getConsole()"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "readPassword": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/io/Console.html#readPassword()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "printf": {
            "!type": "fn(format: string, args: +java.newArray) -> +java.io.Console",
            "!url": "http://developer.android.com/reference/java/io/Console.html#printf(java.lang.String, java.lang.Object[])"
          },
          "writer": {
            "!type": "fn() -> +java.io.PrintWriter",
            "!url": "http://developer.android.com/reference/java/io/Console.html#writer()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "reader": {
            "!type": "fn() -> +java.io.Reader",
            "!url": "http://developer.android.com/reference/java/io/Console.html#reader()"
          },
          "readLine": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/Console.html#readLine()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "format": {
            "!type": "fn(format: string, args: +java.newArray) -> +java.io.Console",
            "!url": "http://developer.android.com/reference/java/io/Console.html#format(java.lang.String, java.lang.Object[])"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "flush": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/Console.html#flush()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "LineNumberInputStream": {
        "!url": "http://developer.android.com/reference/java/io/LineNumberInputStream.html",
        "!type": "fn(in: +java.io.InputStream)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/LineNumberInputStream.html#read()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "available": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/LineNumberInputStream.html#available()"
          },
          "setLineNumber": {
            "!type": "fn(lineNumber: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/LineNumberInputStream.html#setLineNumber(int)"
          },
          "mark": {
            "!type": "fn(readlimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/LineNumberInputStream.html#mark(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/FilterInputStream.html#markSupported()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/LineNumberInputStream.html#reset()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getLineNumber": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/LineNumberInputStream.html#getLineNumber()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "skip": {
            "!type": "fn(byteCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/LineNumberInputStream.html#skip(long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/FilterInputStream.html#close()"
          }
        }
      },
      "ByteArrayOutputStream": {
        "!url": "http://developer.android.com/reference/java/io/ByteArrayOutputStream.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/ByteArrayOutputStream.html#toString()"
          },
          "toByteArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/io/ByteArrayOutputStream.html#toByteArray()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/ByteArrayOutputStream.html#reset()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "flush": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/OutputStream.html#flush()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/ByteArrayOutputStream.html#close()"
          },
          "write": {
            "!type": "fn(buffer: +java.newArray, offset: number, len: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/ByteArrayOutputStream.html#write(byte[], int, int)"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/ByteArrayOutputStream.html#size()"
          },
          "writeTo": {
            "!type": "fn(out: +java.io.OutputStream) -> void",
            "!url": "http://developer.android.com/reference/java/io/ByteArrayOutputStream.html#writeTo(java.io.OutputStream)"
          }
        }
      },
      "StringReader": {
        "!url": "http://developer.android.com/reference/java/io/StringReader.html",
        "!type": "fn(str: string)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/StringReader.html#read()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "mark": {
            "!type": "fn(readLimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/StringReader.html#mark(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/StringReader.html#reset()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/StringReader.html#markSupported()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "ready": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/StringReader.html#ready()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "skip": {
            "!type": "fn(charCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/StringReader.html#skip(long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/StringReader.html#close()"
          }
        }
      },
      "WriteAbortedException": {
        "!url": "http://developer.android.com/reference/java/io/WriteAbortedException.html",
        "!type": "fn(detailMessage: string, rootCause: +java.lang.Exception)",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/WriteAbortedException.html#getMessage()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/io/WriteAbortedException.html#getCause()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "PrintWriter": {
        "!url": "http://developer.android.com/reference/java/io/PrintWriter.html",
        "!type": "fn(out: +java.io.OutputStream)",
        "prototype": {
          "print": {
            "!type": "fn(charArray: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/io/PrintWriter.html#print(char[])"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "append": {
            "!type": "fn(c: +java.lang.Char) -> +java.io.PrintWriter",
            "!url": "http://developer.android.com/reference/java/io/PrintWriter.html#append(char)"
          },
          "printf": {
            "!type": "fn(format: string, args: +java.newArray) -> +java.io.PrintWriter",
            "!url": "http://developer.android.com/reference/java/io/PrintWriter.html#printf(java.lang.String, java.lang.Object[])"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "checkError": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/PrintWriter.html#checkError()"
          },
          "println": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/PrintWriter.html#println()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "format": {
            "!type": "fn(format: string, args: +java.newArray) -> +java.io.PrintWriter",
            "!url": "http://developer.android.com/reference/java/io/PrintWriter.html#format(java.lang.String, java.lang.Object[])"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "flush": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/PrintWriter.html#flush()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/PrintWriter.html#close()"
          },
          "write": {
            "!type": "fn(buf: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/io/PrintWriter.html#write(char[])"
          }
        }
      },
      "PipedOutputStream": {
        "!url": "http://developer.android.com/reference/java/io/PipedOutputStream.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "flush": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/PipedOutputStream.html#flush()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/PipedOutputStream.html#close()"
          },
          "write": {
            "!type": "fn(buffer: +java.newArray, offset: number, count: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/PipedOutputStream.html#write(byte[], int, int)"
          },
          "connect": {
            "!type": "fn(stream: +java.io.PipedInputStream) -> void",
            "!url": "http://developer.android.com/reference/java/io/PipedOutputStream.html#connect(java.io.PipedInputStream)"
          }
        }
      },
      "CharArrayReader": {
        "!url": "http://developer.android.com/reference/java/io/CharArrayReader.html",
        "!type": "fn(buf: +java.newArray)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/CharArrayReader.html#read()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "mark": {
            "!type": "fn(readLimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/CharArrayReader.html#mark(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/CharArrayReader.html#reset()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/CharArrayReader.html#markSupported()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "ready": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/CharArrayReader.html#ready()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "skip": {
            "!type": "fn(charCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/CharArrayReader.html#skip(long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/CharArrayReader.html#close()"
          }
        }
      },
      "InterruptedIOException": {
        "!url": "http://developer.android.com/reference/java/io/InterruptedIOException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "BufferedWriter": {
        "!url": "http://developer.android.com/reference/java/io/BufferedWriter.html",
        "!type": "fn(out: +java.io.Writer)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "append": {
            "!type": "fn(c: +java.lang.Char) -> +java.io.Writer",
            "!url": "http://developer.android.com/reference/java/io/Writer.html#append(char)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "newLine": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/BufferedWriter.html#newLine()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "flush": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/BufferedWriter.html#flush()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/BufferedWriter.html#close()"
          },
          "write": {
            "!type": "fn(buffer: +java.newArray, offset: number, count: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/BufferedWriter.html#write(char[], int, int)"
          }
        }
      },
      "StringBufferInputStream": {
        "!url": "http://developer.android.com/reference/java/io/StringBufferInputStream.html",
        "!type": "fn(str: string)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/StringBufferInputStream.html#read()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "available": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/StringBufferInputStream.html#available()"
          },
          "mark": {
            "!type": "fn(readlimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#mark(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/StringBufferInputStream.html#reset()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#markSupported()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "skip": {
            "!type": "fn(charCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/StringBufferInputStream.html#skip(long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#close()"
          }
        }
      },
      "SyncFailedException": {
        "!url": "http://developer.android.com/reference/java/io/SyncFailedException.html",
        "!type": "fn(detailMessage: string)",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "FileDescriptor": {
        "!url": "http://developer.android.com/reference/java/io/FileDescriptor.html",
        "!type": "fn()",
        "in": {
          "!type": "+java.io.FileDescriptor",
          "!url": "http://developer.android.com/reference/java/io/FileDescriptor.html#in"
        },
        "out": {
          "!type": "+java.io.FileDescriptor",
          "!url": "http://developer.android.com/reference/java/io/FileDescriptor.html#out"
        },
        "err": {
          "!type": "+java.io.FileDescriptor",
          "!url": "http://developer.android.com/reference/java/io/FileDescriptor.html#err"
        },
        "prototype": {
          "valid": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/FileDescriptor.html#valid()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setInt$": {
            "!type": "fn(fd: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/FileDescriptor.html#setInt$(int)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/FileDescriptor.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "isSocket$": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/FileDescriptor.html#isSocket$()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getInt$": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/FileDescriptor.html#getInt$()"
          },
          "sync": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/FileDescriptor.html#sync()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "OptionalDataException": {
        "!url": "http://developer.android.com/reference/java/io/OptionalDataException.html",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "DataOutputStream": {
        "!url": "http://developer.android.com/reference/java/io/DataOutputStream.html",
        "!type": "fn(out: +java.io.OutputStream)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "writeUTF": {
            "!type": "fn(str: string) -> void",
            "!url": "http://developer.android.com/reference/java/io/DataOutputStream.html#writeUTF(java.lang.String)"
          },
          "writeBytes": {
            "!type": "fn(str: string) -> void",
            "!url": "http://developer.android.com/reference/java/io/DataOutputStream.html#writeBytes(java.lang.String)"
          },
          "writeChars": {
            "!type": "fn(str: string) -> void",
            "!url": "http://developer.android.com/reference/java/io/DataOutputStream.html#writeChars(java.lang.String)"
          },
          "writeInt": {
            "!type": "fn(val: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/DataOutputStream.html#writeInt(int)"
          },
          "writeLong": {
            "!type": "fn(val: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/java/io/DataOutputStream.html#writeLong(long)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "writeFloat": {
            "!type": "fn(val: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/java/io/DataOutputStream.html#writeFloat(float)"
          },
          "writeChar": {
            "!type": "fn(val: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/DataOutputStream.html#writeChar(int)"
          },
          "writeByte": {
            "!type": "fn(val: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/DataOutputStream.html#writeByte(int)"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/FilterOutputStream.html#close()"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/DataOutputStream.html#size()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "flush": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/DataOutputStream.html#flush()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "writeDouble": {
            "!type": "fn(val: +java.lang.Double) -> void",
            "!url": "http://developer.android.com/reference/java/io/DataOutputStream.html#writeDouble(double)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "writeShort": {
            "!type": "fn(val: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/DataOutputStream.html#writeShort(int)"
          },
          "write": {
            "!type": "fn(buffer: +java.newArray, offset: number, count: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/DataOutputStream.html#write(byte[], int, int)"
          },
          "writeBoolean": {
            "!type": "fn(val: bool) -> void",
            "!url": "http://developer.android.com/reference/java/io/DataOutputStream.html#writeBoolean(boolean)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "BufferedInputStream": {
        "!url": "http://developer.android.com/reference/java/io/BufferedInputStream.html",
        "!type": "fn(in: +java.io.InputStream)",
        "DEFAULT_BUFFER_SIZE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/io/BufferedInputStream.html#DEFAULT_BUFFER_SIZE"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/BufferedInputStream.html#read()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "available": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/BufferedInputStream.html#available()"
          },
          "mark": {
            "!type": "fn(readlimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/BufferedInputStream.html#mark(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/BufferedInputStream.html#reset()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/BufferedInputStream.html#markSupported()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "skip": {
            "!type": "fn(byteCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/BufferedInputStream.html#skip(long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/BufferedInputStream.html#close()"
          }
        }
      },
      "OutputStreamWriter": {
        "!url": "http://developer.android.com/reference/java/io/OutputStreamWriter.html",
        "!type": "fn(out: +java.io.OutputStream)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "append": {
            "!type": "fn(c: +java.lang.Char) -> +java.io.Writer",
            "!url": "http://developer.android.com/reference/java/io/Writer.html#append(char)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getEncoding": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/OutputStreamWriter.html#getEncoding()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "flush": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/OutputStreamWriter.html#flush()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/OutputStreamWriter.html#close()"
          },
          "write": {
            "!type": "fn(buffer: +java.newArray, offset: number, count: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/OutputStreamWriter.html#write(char[], int, int)"
          }
        }
      },
      "PrintStream": {
        "!url": "http://developer.android.com/reference/java/io/PrintStream.html",
        "!type": "fn(out: +java.io.OutputStream)",
        "prototype": {
          "print": {
            "!type": "fn(chars: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/io/PrintStream.html#print(char[])"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "append": {
            "!type": "fn(c: +java.lang.Char) -> +java.io.PrintStream",
            "!url": "http://developer.android.com/reference/java/io/PrintStream.html#append(char)"
          },
          "printf": {
            "!type": "fn(format: string, args: +java.newArray) -> +java.io.PrintStream",
            "!url": "http://developer.android.com/reference/java/io/PrintStream.html#printf(java.lang.String, java.lang.Object[])"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "checkError": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/PrintStream.html#checkError()"
          },
          "println": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/PrintStream.html#println()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "format": {
            "!type": "fn(format: string, args: +java.newArray) -> +java.io.PrintStream",
            "!url": "http://developer.android.com/reference/java/io/PrintStream.html#format(java.lang.String, java.lang.Object[])"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "flush": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/PrintStream.html#flush()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/PrintStream.html#close()"
          },
          "write": {
            "!type": "fn(buffer: +java.newArray, offset: number, length: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/PrintStream.html#write(byte[], int, int)"
          }
        }
      },
      "RandomAccessFile": {
        "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html",
        "!type": "fn(file: +java.io.File, mode: string)",
        "prototype": {
          "getFilePointer": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#getFilePointer()"
          },
          "readShort": {
            "!type": "fn() -> +java.lang.Short",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#readShort()"
          },
          "readByte": {
            "!type": "fn() -> +java.lang.Byte",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#readByte()"
          },
          "setLength": {
            "!type": "fn(newLength: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#setLength(long)"
          },
          "getChannel": {
            "!type": "fn() -> +java.nio.channels.FileChannel",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#getChannel()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "readUnsignedShort": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#readUnsignedShort()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "write": {
            "!type": "fn(buffer: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#write(byte[])"
          },
          "readFully": {
            "!type": "fn(dst: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#readFully(byte[])"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "readLong": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#readLong()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "writeByte": {
            "!type": "fn(val: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#writeByte(int)"
          },
          "getFD": {
            "!type": "fn() -> +java.io.FileDescriptor",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#getFD()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "readInt": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#readInt()"
          },
          "writeFloat": {
            "!type": "fn(val: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#writeFloat(float)"
          },
          "length": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#length()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#read()"
          },
          "seek": {
            "!type": "fn(offset: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#seek(long)"
          },
          "skipBytes": {
            "!type": "fn(count: number) -> number",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#skipBytes(int)"
          },
          "readChar": {
            "!type": "fn() -> +java.lang.Char",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#readChar()"
          },
          "writeLong": {
            "!type": "fn(val: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#writeLong(long)"
          },
          "writeUTF": {
            "!type": "fn(str: string) -> void",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#writeUTF(java.lang.String)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "writeShort": {
            "!type": "fn(val: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#writeShort(int)"
          },
          "writeChars": {
            "!type": "fn(str: string) -> void",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#writeChars(java.lang.String)"
          },
          "readDouble": {
            "!type": "fn() -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#readDouble()"
          },
          "writeChar": {
            "!type": "fn(val: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#writeChar(int)"
          },
          "readFloat": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#readFloat()"
          },
          "writeDouble": {
            "!type": "fn(val: +java.lang.Double) -> void",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#writeDouble(double)"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#close()"
          },
          "readBoolean": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#readBoolean()"
          },
          "readUnsignedByte": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#readUnsignedByte()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "writeBytes": {
            "!type": "fn(str: string) -> void",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#writeBytes(java.lang.String)"
          },
          "readUTF": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#readUTF()"
          },
          "writeBoolean": {
            "!type": "fn(val: bool) -> void",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#writeBoolean(boolean)"
          },
          "readLine": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#readLine()"
          },
          "writeInt": {
            "!type": "fn(val: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/RandomAccessFile.html#writeInt(int)"
          }
        }
      },
      "ByteArrayInputStream": {
        "!url": "http://developer.android.com/reference/java/io/ByteArrayInputStream.html",
        "!type": "fn(buf: +java.newArray)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/ByteArrayInputStream.html#read()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "available": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/ByteArrayInputStream.html#available()"
          },
          "mark": {
            "!type": "fn(readlimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/ByteArrayInputStream.html#mark(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/ByteArrayInputStream.html#reset()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/ByteArrayInputStream.html#markSupported()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "skip": {
            "!type": "fn(byteCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/ByteArrayInputStream.html#skip(long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/ByteArrayInputStream.html#close()"
          }
        }
      },
      "FileReader": {
        "!url": "http://developer.android.com/reference/java/io/FileReader.html",
        "!type": "fn(file: +java.io.File)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/InputStreamReader.html#read()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "mark": {
            "!type": "fn(readLimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/Reader.html#mark(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/Reader.html#reset()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/Reader.html#markSupported()"
          },
          "getEncoding": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/InputStreamReader.html#getEncoding()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "ready": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/InputStreamReader.html#ready()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "skip": {
            "!type": "fn(charCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/Reader.html#skip(long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/InputStreamReader.html#close()"
          }
        }
      },
      "InvalidObjectException": {
        "!url": "http://developer.android.com/reference/java/io/InvalidObjectException.html",
        "!type": "fn(detailMessage: string)",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "LineNumberReader": {
        "!url": "http://developer.android.com/reference/java/io/LineNumberReader.html",
        "!type": "fn(in: +java.io.Reader)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/LineNumberReader.html#read()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setLineNumber": {
            "!type": "fn(lineNumber: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/LineNumberReader.html#setLineNumber(int)"
          },
          "mark": {
            "!type": "fn(readlimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/LineNumberReader.html#mark(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/BufferedReader.html#markSupported()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/LineNumberReader.html#reset()"
          },
          "readLine": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/LineNumberReader.html#readLine()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "ready": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/BufferedReader.html#ready()"
          },
          "getLineNumber": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/LineNumberReader.html#getLineNumber()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "skip": {
            "!type": "fn(charCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/LineNumberReader.html#skip(long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/BufferedReader.html#close()"
          }
        }
      },
      "PipedInputStream": {
        "!url": "http://developer.android.com/reference/java/io/PipedInputStream.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/PipedInputStream.html#read()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "available": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/PipedInputStream.html#available()"
          },
          "mark": {
            "!type": "fn(readlimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#mark(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#reset()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#markSupported()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "skip": {
            "!type": "fn(byteCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#skip(long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/PipedInputStream.html#close()"
          },
          "connect": {
            "!type": "fn(src: +java.io.PipedOutputStream) -> void",
            "!url": "http://developer.android.com/reference/java/io/PipedInputStream.html#connect(java.io.PipedOutputStream)"
          }
        }
      },
      "SequenceInputStream": {
        "!url": "http://developer.android.com/reference/java/io/SequenceInputStream.html",
        "!type": "fn(s1: +java.io.InputStream, s2: +java.io.InputStream)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/SequenceInputStream.html#read()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "available": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/SequenceInputStream.html#available()"
          },
          "mark": {
            "!type": "fn(readlimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#mark(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#reset()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#markSupported()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "skip": {
            "!type": "fn(byteCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#skip(long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/SequenceInputStream.html#close()"
          }
        }
      },
      "Reader": {
        "!url": "http://developer.android.com/reference/java/io/Reader.html",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/Reader.html#read()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "mark": {
            "!type": "fn(readLimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/Reader.html#mark(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/Reader.html#reset()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/Reader.html#markSupported()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "ready": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/Reader.html#ready()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "skip": {
            "!type": "fn(charCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/Reader.html#skip(long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/Reader.html#close()"
          }
        }
      },
      "ObjectStreamException": {
        "!url": "http://developer.android.com/reference/java/io/ObjectStreamException.html",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "UTFDataFormatException": {
        "!url": "http://developer.android.com/reference/java/io/UTFDataFormatException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "FileInputStream": {
        "!url": "http://developer.android.com/reference/java/io/FileInputStream.html",
        "!type": "fn(file: +java.io.File)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "read": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/FileInputStream.html#read()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "available": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/FileInputStream.html#available()"
          },
          "getChannel": {
            "!type": "fn() -> +java.nio.channels.FileChannel",
            "!url": "http://developer.android.com/reference/java/io/FileInputStream.html#getChannel()"
          },
          "mark": {
            "!type": "fn(readlimit: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#mark(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#reset()"
          },
          "markSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/io/InputStream.html#markSupported()"
          },
          "getFD": {
            "!type": "fn() -> +java.io.FileDescriptor",
            "!url": "http://developer.android.com/reference/java/io/FileInputStream.html#getFD()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "skip": {
            "!type": "fn(byteCount: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/io/FileInputStream.html#skip(long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/FileInputStream.html#close()"
          }
        }
      },
      "FileNotFoundException": {
        "!url": "http://developer.android.com/reference/java/io/FileNotFoundException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "EOFException": {
        "!url": "http://developer.android.com/reference/java/io/EOFException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "PipedWriter": {
        "!url": "http://developer.android.com/reference/java/io/PipedWriter.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "append": {
            "!type": "fn(c: +java.lang.Char) -> +java.io.Writer",
            "!url": "http://developer.android.com/reference/java/io/Writer.html#append(char)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "flush": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/PipedWriter.html#flush()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/PipedWriter.html#close()"
          },
          "write": {
            "!type": "fn(buffer: +java.newArray, offset: number, count: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/PipedWriter.html#write(char[], int, int)"
          },
          "connect": {
            "!type": "fn(reader: +java.io.PipedReader) -> void",
            "!url": "http://developer.android.com/reference/java/io/PipedWriter.html#connect(java.io.PipedReader)"
          }
        }
      },
      "FilterWriter": {
        "!url": "http://developer.android.com/reference/java/io/FilterWriter.html",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "append": {
            "!type": "fn(c: +java.lang.Char) -> +java.io.Writer",
            "!url": "http://developer.android.com/reference/java/io/Writer.html#append(char)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "flush": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/FilterWriter.html#flush()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/FilterWriter.html#close()"
          },
          "write": {
            "!type": "fn(buffer: +java.newArray, offset: number, count: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/FilterWriter.html#write(char[], int, int)"
          }
        }
      },
      "StringWriter": {
        "!url": "http://developer.android.com/reference/java/io/StringWriter.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/StringWriter.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "append": {
            "!type": "fn(c: +java.lang.Char) -> +java.io.StringWriter",
            "!url": "http://developer.android.com/reference/java/io/StringWriter.html#append(char)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "flush": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/StringWriter.html#flush()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getBuffer": {
            "!type": "fn() -> +java.lang.StringBuffer",
            "!url": "http://developer.android.com/reference/java/io/StringWriter.html#getBuffer()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/StringWriter.html#close()"
          },
          "write": {
            "!type": "fn(chars: +java.newArray, offset: number, count: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/StringWriter.html#write(char[], int, int)"
          }
        }
      },
      "IOException": {
        "!url": "http://developer.android.com/reference/java/io/IOException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "StreamCorruptedException": {
        "!url": "http://developer.android.com/reference/java/io/StreamCorruptedException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "CharArrayWriter": {
        "!url": "http://developer.android.com/reference/java/io/CharArrayWriter.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "append": {
            "!type": "fn(c: +java.lang.Char) -> +java.io.CharArrayWriter",
            "!url": "http://developer.android.com/reference/java/io/CharArrayWriter.html#append(char)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/CharArrayWriter.html#toString()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toCharArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/io/CharArrayWriter.html#toCharArray()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/CharArrayWriter.html#reset()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "flush": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/CharArrayWriter.html#flush()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/io/CharArrayWriter.html#close()"
          },
          "write": {
            "!type": "fn(buffer: +java.newArray, offset: number, len: number) -> void",
            "!url": "http://developer.android.com/reference/java/io/CharArrayWriter.html#write(char[], int, int)"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/io/CharArrayWriter.html#size()"
          },
          "writeTo": {
            "!type": "fn(out: +java.io.Writer) -> void",
            "!url": "http://developer.android.com/reference/java/io/CharArrayWriter.html#writeTo(java.io.Writer)"
          }
        }
      },
      "SerializablePermission": {
        "!url": "http://developer.android.com/reference/java/io/SerializablePermission.html",
        "!type": "fn(permissionName: string)",
        "prototype": {
          "getActions": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/io/SerializablePermission.html#getActions()"
          },
          "getName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/security/Permission.html#getName()"
          },
          "implies": {
            "!type": "fn(permission: +java.security.Permission) -> bool",
            "!url": "http://developer.android.com/reference/java/io/SerializablePermission.html#implies(java.security.Permission)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "checkGuard": {
            "!type": "fn(obj: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/java/security/Permission.html#checkGuard(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "newPermissionCollection": {
            "!type": "fn() -> +java.security.PermissionCollection",
            "!url": "http://developer.android.com/reference/java/security/Permission.html#newPermissionCollection()"
          }
        }
      }
    }
  }
}